;; Object helm-20130904.1907/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "helm-20130904.1907/"
  :tables
  (list
    (semanticdb-table "helm-misc.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [800 813])
            ("helm" include nil nil [815 830])
            ("helm-misc" customgroup (:user-visible-flag t) nil [834 922])
            ("helm-time-zone-home-location" variable (:default-value "Paris") nil [924 1039])
            ("helm-time-zone-current" variable
               (:default-value (quote ((t (:foreground "green"))))
                :type "face")
                nil [1041 1187])
            ("helm-time-zone-home" variable
               (:default-value (quote ((t (:foreground "red"))))
                :type "face")
                nil [1189 1327])
            ("helm-latex-math-candidates" function nil nil [1352 1651])
            ("helm-source-latex-math" variable (:default-value (quote ((name . "Latex Math Menu") (init lambda nil (with-helm-current-buffer (LaTeX-math-mode 1))) (candidate-number-limit . 9999) (candidates . helm-latex-math-candidates) (action lambda (candidate) (call-interactively candidate))))) nil [1653 1983])
            ("helm-source-fixme" variable (:default-value (quote ((name . "TODO/FIXME/DRY comments") (headline . "^.*\\<\\(TODO\\|FIXME\\|DRY\\)\\>.*$") (adjust) (recenter)))) nil [2014 2214])
            ("helm-source-rd-headline" variable (:default-value (quote ((name . "RD HeadLine") (headline "^= \\(.+\\)$" "^== \\(.+\\)$" "^=== \\(.+\\)$" "^==== \\(.+\\)$") (condition memq major-mode (quote (rdgrep-mode rd-mode))) (migemo) (subexp . 1)))) nil [2216 2539])
            ("helm-source-oddmuse-headline" variable (:default-value (quote ((name . "Oddmuse HeadLine") (headline "^= \\(.+\\) =$" "^== \\(.+\\) ==$" "^=== \\(.+\\) ===$" "^==== \\(.+\\) ====$") (condition memq major-mode (quote (oddmuse-mode yaoddmuse-mode))) (migemo) (subexp . 1)))) nil [2541 2856])
            ("helm-source-emacs-source-defun" variable (:default-value (quote ((name . "Emacs Source DEFUN") (headline . "DEFUN\\|DEFVAR") (condition string-match "/emacs2[0-9].+/src/.+c$" (or buffer-file-name ""))))) nil [2858 3114])
            ("helm-source-emacs-lisp-expectations" variable (:default-value (quote ((name . "Emacs Lisp Expectations") (headline . "(desc[ ]\\|(expectations") (condition eq major-mode (quote emacs-lisp-mode))))) nil [3116 3419])
            ("helm-source-emacs-lisp-toplevels" variable (:default-value (quote ((name . "Emacs Lisp Toplevel / Level 4 Comment / Linkd Star") (headline . "^(\\|(@\\*\\|^;;;;") (get-line . buffer-substring) (condition eq major-mode (quote emacs-lisp-mode)) (adjust)))) nil [3421 3872])
            ("helm-source-eev-anchor" variable (:default-value (quote ((name . "Anchors") (candidates lambda nil (ignore-errors (with-helm-current-buffer (loop initially (goto-char (point-min)) while (re-search-forward (format ee-anchor-format "\\([^.].+\\)") nil t) for anchor = (match-string-no-properties 1) collect (cons (format "%5d:%s" (line-number-at-pos (match-beginning 0)) (format ee-anchor-format anchor)) anchor))))) (persistent-action lambda (item) (ee-to item) (helm-match-line-color-current-line)) (persistent-help . "Show this entry") (action ("Goto link" . ee-to))))) nil [3892 4757])
            ("helm-jabber-online-contacts" function nil nil [4791 5132])
            ("helm-source-jabber-contacts" variable (:default-value (quote ((name . "Jabber Contacts") (init lambda nil (require (quote jabber))) (candidates lambda nil (mapcar (quote car) (helm-jabber-online-contacts))) (action lambda (x) (jabber-chat-with (jabber-read-account) (symbol-name (cdr (assoc x (helm-jabber-online-contacts))))))))) nil [5134 5517])
            ("helm-time-zone-transformer" function (:arguments ("candidates" "sources")) nil [5537 5914])
            ("helm-source-time-world" variable (:default-value (quote ((name . "Time World List") (init lambda nil (require (quote time)) (let ((helm-buffer (helm-candidate-buffer (quote global)))) (with-current-buffer helm-buffer (display-time-world-display display-time-world-list)))) (candidates-in-buffer) (filtered-candidate-transformer . helm-time-zone-transformer)))) nil [5916 6316])
            ("helm-source-lacarte" variable (:default-value (quote ((name . "Lacarte") (init lambda nil (require (quote lacarte))) (candidates lambda nil (with-helm-current-buffer (delete (quote (nil)) (lacarte-get-overall-menu-item-alist)))) (candidate-number-limit . 9999) (action . helm-call-interactively)))) nil [6333 6739])
            ("helm-call-interactively" function (:arguments ("cmd-or-name")) nil [6741 7348])
            ("helm-source-minibuffer-history" variable (:default-value (quote ((name . "Minibuffer History") (header-name lambda (name) (format "%s (%s)" name minibuffer-history-variable)) (candidates lambda nil (let ((history (loop for i in (symbol-value minibuffer-history-variable) unless (string= "" i) collect i))) (if (consp (car history)) (mapcar (quote prin1-to-string) history) history))) (migemo) (multiline) (action lambda (candidate) (delete-minibuffer-contents) (insert candidate))))) nil [7378 8030])
            ("helm-source-ratpoison-commands" variable (:default-value (quote ((name . "Ratpoison Commands") (init . helm-ratpoison-commands-init) (candidates-in-buffer) (action ("Execute the command" . helm-ratpoison-commands-execute)) (display-to-real . helm-ratpoison-commands-display-to-real) (candidate-number-limit)))) nil [8063 8370])
            ("helm-ratpoison-commands-init" function nil nil [8372 8999])
            ("helm-ratpoison-commands-display-to-real" function (:arguments ("display")) nil [9001 9135])
            ("helm-ratpoison-commands-execute" function (:arguments ("candidate")) nil [9137 9245])
            ("helm-source-stumpwm-commands" variable (:default-value (quote ((name . "Stumpwm Commands") (init . helm-stumpwm-commands-init) (candidates-in-buffer) (action ("Execute the command" . helm-stumpwm-commands-execute)) (candidate-number-limit)))) nil [9273 9508])
            ("helm-stumpwm-commands-init" function nil nil [9510 9818])
            ("helm-stumpwm-commands-execute" function (:arguments ("candidate")) nil [9820 9920])
            ("helm-world-time" function (:user-visible-flag t) nil [9937 10090])
            ("helm-insert-latex-math" function (:user-visible-flag t) nil [10107 10275])
            ("helm-eev-anchors" function (:user-visible-flag t) nil [10292 10444])
            ("helm-ratpoison-commands" function (:user-visible-flag t) nil [10461 10670])
            ("helm-stumpwm-commands" function nil nil [10687 10833])
            ("helm-mini" function (:user-visible-flag t) nil [10851 11159])
            ("helm-minibuffer-history" function (:user-visible-flag t) nil [11176 11427])
            ("helm-misc" package nil nil [11429 11449]))          
      :file "helm-misc.el"
      :pointmax 11603
      :fsize 11602
      :lastmodtime '(21032 36649 482388 846000)
      :unmatched-syntax '((close-paren 813 . 814) (symbol 782 . 799) (open-paren 781 . 782)))
    (semanticdb-table "helm.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [1249 1262])
            ("helm-define-multi-key" function (:arguments ("keymap" "key" "functions" "delay")) nil [1302 2076])
            ("helm-multi-key-defun" function (:arguments ("name" "docstring" "funs" "delay")) nil [2078 2503])
            ("helm-make-multi-command" function (:arguments ("functions" "delay")) nil [2505 2955])
            ("helm-run-multi-key-command" function (:arguments ("functions" "iterator" "delay")) nil [2957 3773])
            ("helm-iter-list" function (:arguments ("seq")) nil [3775 3958])
            ("helm-iter-next" function (:arguments ("iterator")) nil [3960 4047])
            ("helm-multi-key-defun" code nil nil [4049 4313])
            ("helm-map" variable (:default-value (let ((map (make-sparse-keymap))) (set-keymap-parent map minibuffer-local-map) (define-key map (kbd "<down>") (quote helm-next-line)) (define-key map (kbd "<up>") (quote helm-previous-line)) (define-key map (kbd "C-n") (quote helm-next-line)) (define-key map (kbd "C-p") (quote helm-previous-line)) (define-key map (kbd "<prior>") (quote helm-previous-page)) (define-key map (kbd "<next>") (quote helm-next-page)) (define-key map (kbd "M-v") (quote helm-previous-page)) (define-key map (kbd "C-v") (quote helm-next-page)) (define-key map (kbd "M-<") (quote helm-beginning-of-buffer)) (define-key map (kbd "M->") (quote helm-end-of-buffer)) (define-key map (kbd "C-g") (quote helm-keyboard-quit)) (define-key map (kbd "<right>") (quote helm-next-source)) (define-key map (kbd "<left>") (quote helm-previous-source)) (define-key map (kbd "<RET>") (quote helm-exit-minibuffer)) (define-key map (kbd "C-i") (quote helm-select-action)) (define-key map (kbd "C-z") (quote helm-execute-persistent-action)) (define-key map (kbd "C-e") (quote helm-select-2nd-action-or-end-of-line)) (define-key map (kbd "C-j") (quote helm-select-3rd-action)) (define-key map (kbd "C-o") (quote helm-next-source)) (define-key map (kbd "C-l") (quote helm-recenter-top-bottom-other-window)) (define-key map (kbd "M-C-l") (quote helm-reposition-window-other-window)) (define-key map (kbd "C-M-v") (quote helm-scroll-other-window)) (define-key map (kbd "M-<next>") (quote helm-scroll-other-window)) (define-key map (kbd "C-M-y") (quote helm-scroll-other-window-down)) (define-key map (kbd "C-M-S-v") (quote helm-scroll-other-window-down)) (define-key map (kbd "M-<prior>") (quote helm-scroll-other-window-down)) (define-key map (kbd "<C-M-down>") (quote helm-scroll-other-window)) (define-key map (kbd "<C-M-up>") (quote helm-scroll-other-window-down)) (define-key map (kbd "C-SPC") (quote helm-toggle-visible-mark)) (define-key map (kbd "M-SPC") (quote helm-toggle-visible-mark)) (define-key map (kbd "M-[") (quote helm-prev-visible-mark)) (define-key map (kbd "M-]") (quote helm-next-visible-mark)) (define-key map (kbd "C-k") (quote helm-delete-minibuffer-contents)) (define-key map (kbd "C-x C-f") (quote helm-quit-and-find-file)) (define-key map (kbd "M-m") (quote helm-toggle-all-marks)) (define-key map (kbd "M-a") (quote helm-mark-all)) (define-key map (kbd "M-u") (quote helm-unmark-all)) (define-key map (kbd "C-w") (quote helm-yank-text-at-point)) (define-key map (kbd "C-M-a") (quote helm-show-all-in-this-source-only)) (define-key map (kbd "C-M-e") (quote helm-display-all-sources)) (define-key map (kbd "C-r") (quote undefined)) (define-key map (kbd "C-s") (quote undefined)) (define-key map (kbd "M-s") (quote undefined)) (define-key map (kbd "C-}") (quote helm-narrow-window)) (define-key map (kbd "C-{") (quote helm-enlarge-window)) (define-key map (kbd "C-c -") (quote helm-swap-windows)) (define-key map (kbd "C-c C-d") (quote helm-delete-current-selection)) (define-key map (kbd "C-c C-y") (quote helm-yank-selection)) (define-key map (kbd "C-c C-k") (quote helm-kill-selection-and-quit)) (define-key map (kbd "C-c C-f") (quote helm-follow-mode)) (define-key map (kbd "C-c C-u") (quote helm-force-update)) (define-key map (kbd "M-p") (quote previous-history-element)) (define-key map (kbd "M-n") (quote next-history-element)) (define-key map (kbd "C-!") (quote helm-toggle-suspend-update)) (define-key map (kbd "C-x b") (quote helm-resume-previous-session-after-quit)) (define-key map (kbd "C-x C-b") (quote helm-resume-list-buffers-after-quit)) (define-key map (kbd "<C-tab>") (quote undefined)) (define-key map (kbd "C-t") (quote helm-toggle-resplit-and-swap-windows)) (define-key map (kbd "C-h C-d") (quote undefined)) (define-key map (kbd "C-h C-d") (quote helm-debug-output)) (define-key map [f1] nil) (define-key map (kbd "C-h C-h") (quote undefined)) (define-key map (kbd "C-h h") (quote undefined)) (dolist (k (where-is-internal (quote describe-mode) global-map)) (define-key map k (quote helm-help))) map)) nil [4334 8703])
            ("helm" customgroup (:user-visible-flag t) nil [8707 8779])
            ("helm-completion-window-scroll-margin" variable (:default-value 5) nil [8781 9033])
            ("helm-display-source-at-screen-top" variable (:default-value t) nil [9035 9307])
            ("helm-candidate-number-limit" variable (:default-value 100) nil [9309 9752])
            ("helm-idle-delay" variable (:default-value 0.1) nil [9754 10301])
            ("helm-input-idle-delay" variable (:default-value 0.1) nil [10303 10809])
            ("helm-full-frame" variable nil nil [10811 10965])
            ("defvaralias" code nil nil [10967 11014])
            ("make-obsolete-variable" code nil nil [11015 11083])
            ("helm-quick-update" variable nil nil [11085 11334])
            ("helm-candidate-separator" variable (:default-value "--------------------") nil [11336 11476])
            ("helm-save-configuration-functions" variable (:default-value (quote (set-window-configuration . current-window-configuration))) nil [11478 12161])
            ("helm-persistent-action-use-special-display" variable nil nil [12163 12322])
            ("helm-scroll-amount" variable nil nil [12324 12594])
            ("helm-display-function" variable (:default-value (quote helm-default-display-buffer)) nil [12596 12809])
            ("helm-case-fold-search" variable (:default-value (quote smart)) nil [12811 13458])
            ("helm-file-name-case-fold-search" variable (:default-value (if (memq system-type (quote (cygwin windows-nt ms-dos darwin))) t helm-case-fold-search)) nil [13460 13753])
            ("helm-reuse-last-window-split-state" variable nil nil [13755 14039])
            ("helm-split-window-preferred-function" variable (:default-value (quote helm-split-window-default-fn)) nil [14041 14200])
            ("helm-split-window-default-side" variable (:default-value (quote below)) nil [14202 14796])
            ("helm-split-window-in-side-p" variable nil nil [14798 15119])
            ("helm-always-two-windows" variable nil nil [15121 15469])
            ("helm-sources-using-default-as-input" variable (:default-value (quote (helm-source-imenu helm-source-info-elisp helm-source-etags-select))) nil [15471 15897])
            ("helm-never-delay-on-input" variable (:default-value t) nil [15899 16410])
            ("helm-delete-minibuffer-contents-from-point" variable nil nil [16412 16633])
            ("helm-follow-mode-persistent" variable nil nil [16635 16971])
            ("helm-source-header" variable
               (:default-value (quote ((((background dark)) :background "#22083397778B" :foreground "white" :weight bold :height 1.3 :family "Sans Serif") (((background light)) :background "#abd7f0" :foreground "black" :weight bold :height 1.3 :family "Sans Serif")))
                :type "face")
                nil [16991 17363])
            ("helm-visible-mark" variable
               (:default-value (quote ((((min-colors 88) (background dark)) (:background "green1" :foreground "black")) (((background dark)) (:background "green" :foreground "black")) (((background light)) :background "#d1f5ea") (((min-colors 88)) (:background "green1")) (t (:background "green"))))
                :type "face")
                nil [17365 17745])
            ("helm-header" variable
               (:default-value (quote ((t (:inherit header-line))))
                :type "face")
                nil [17747 17863])
            ("helm-candidate-number" variable
               (:default-value (quote ((((background dark)) :background "Yellow" :foreground "black") (((background light)) :background "#faffb5" :foreground "black")))
                :type "face")
                nil [17865 18094])
            ("helm-selection" variable
               (:default-value (quote ((((background dark)) :background "ForestGreen" :underline t) (((background light)) :background "#b5ffd1" :underline t)))
                :type "face")
                nil [18096 18324])
            ("helm-separator" variable
               (:default-value (quote ((((background dark)) :foreground "red") (((background light)) :foreground "#ffbfb5")))
                :type "face")
                nil [18326 18504])
            ("helm-action" variable
               (:default-value (quote ((t (:underline t))))
                :type "face")
                nil [18506 18621])
            ("helm-type-attributes" variable nil nil [18646 19054])
            ("helm-source-filter" variable nil nil [19056 19251])
            ("helm-action-buffer" variable (:default-value "*helm action*") nil [19253 19324])
            ("helm-selection-overlay" variable nil nil [19326 19420])
            ("helm-async-processes" variable nil nil [19422 19525])
            ("helm-before-initialize-hook" variable nil nil [19527 19661])
            ("helm-after-initialize-hook" variable nil nil [19663 19839])
            ("helm-update-hook" variable nil nil [19841 20082])
            ("helm-after-update-hook" variable nil nil [20084 20334])
            ("helm-cleanup-hook" variable nil nil [20336 20459])
            ("helm-select-action-hook" variable nil nil [20461 20537])
            ("helm-before-action-hook" variable nil nil [20539 20720])
            ("helm-after-action-hook" variable nil nil [20722 20789])
            ("helm-after-persistent-action-hook" variable nil nil [20791 20880])
            ("helm-move-selection-before-hook" variable nil nil [20882 20976])
            ("helm-move-selection-after-hook" variable nil nil [20978 21070])
            ("helm-restored-variables" variable (:default-value (quote (helm-candidate-number-limit helm-source-filter helm-source-in-each-line-flag helm-map helm-sources))) nil [21072 21282])
            ("helm-execute-action-at-once-if-one" variable nil nil [21284 21405])
            ("helm-quit-if-no-candidate" variable nil nil [21407 21566])
            ("helm-maybe-use-default-as-input" variable nil nil [21568 21761])
            ("helm-source-in-each-line-flag" variable nil nil [21763 21894])
            ("helm-debug-variables" variable nil nil [21896 22046])
            ("helm-debug-buffer" variable (:default-value "*Debug Helm Log*") nil [22048 22093])
            ("helm-debug" variable nil nil [22095 22333])
            ("helm-compile-source-functions" variable (:default-value (quote (helm-compile-source--type helm-compile-source--dummy helm-compile-source--candidates-in-buffer))) nil [22335 22544])
            ("helm-current-prefix-arg" variable nil nil [22577 22670])
            ("helm-saved-action" variable nil nil [22671 22758])
            ("helm-saved-current-source" variable nil nil [22759 22860])
            ("helm-compiled-sources" variable nil nil [22861 22935])
            ("helm-in-persistent-action" variable nil nil [22936 23020])
            ("helm-last-buffer" variable nil nil [23021 23098])
            ("helm-saved-selection" variable nil nil [23099 23206])
            ("helm-sources" variable nil nil [23207 23232])
            ("helm-delayed-init-executed" variable nil nil [23233 23272])
            ("helm-buffer" variable (:default-value "*helm*") nil [23273 23334])
            ("helm-current-buffer" variable nil nil [23335 23410])
            ("helm-buffer-file-name" variable nil nil [23411 23501])
            ("helm-default-directory" variable nil nil [23502 23602])
            ("helm-candidate-cache" variable (:default-value (make-hash-table :test (quote equal))) nil [23603 23730])
            ("helm-pattern" variable nil nil [23731 23809])
            ("helm-input" variable nil nil [23810 23877])
            ("helm-input-local" variable nil nil [23878 23988])
            ("helm-source-name" variable nil nil [23989 24018])
            ("helm-candidate-buffer-alist" variable nil nil [24019 24059])
            ("helm-match-hash" variable (:default-value (make-hash-table :test (quote equal))) nil [24060 24115])
            ("helm-cib-hash" variable (:default-value (make-hash-table :test (quote equal))) nil [24116 24169])
            ("helm-tick-hash" variable (:default-value (make-hash-table :test (quote equal))) nil [24170 24224])
            ("helm-issued-errors" variable nil nil [24225 24256])
            ("helm-debug-root-directory" variable nil nil [24257 24517])
            ("helm-last-log-file" variable nil nil [24518 24597])
            ("helm-follow-mode" variable nil nil [24598 24627])
            ("helm-let-variables" variable nil nil [24628 24659])
            ("helm-split-window-state" variable nil nil [24660 24696])
            ("helm-selection-point" variable nil nil [24697 24730])
            ("helm-alive-p" variable nil nil [24731 24756])
            ("helm-visible-mark-overlays" variable nil nil [24757 24796])
            ("helm-update-blacklist-regexps" variable (:default-value (quote ("^" "^ *" "$" "!" " " "\\b" "\\<" "\\>" "\\<_" "\\>_" ".*"))) nil [24797 24937])
            ("helm-suspend-update-flag" variable nil nil [24938 24975])
            ("helm-force-updating-p" variable nil nil [24976 25010])
            ("helm-exit-status" variable nil nil [25011 25344])
            ("helm-minibuffer-confirm-state" variable nil nil [25345 25387])
            ("helm-quit" variable nil nil [25388 25410])
            ("helm-attributes" variable nil nil [25411 25472])
            ("helm-buffers" variable nil nil [25473 25552])
            ("helm-current-position" variable nil nil [25553 25740])
            ("helm-last-frame-or-window-configuration" variable nil nil [25741 25858])
            ("helm-onewindow-p" variable nil nil [25859 25888])
            ("helm-types" variable nil nil [25889 25912])
            ("helm-mode-line-string-real" variable nil nil [25913 25952])
            ("helm-persistent-action-display-window" variable nil nil [25991 26041])
            ("helm-marked-candidates" variable nil nil [26042 26133])
            ("helm-in-file-completion-p" variable nil nil [26134 26172])
            ("helm-log" function (:arguments ("format-string" "args")) nil [26196 26985])
            ("helm-log-eval" function (:arguments ("exprs")) nil [26987 27128])
            ("helm-log-run-hook" function (:arguments ("hook")) nil [27130 27424])
            ("helm-log-eval-internal" function (:arguments ("exprs")) nil [27426 27793])
            ("helm-log-get-current-function" function nil nil [27795 28255])
            ("helm-log-error" function (:arguments ("args")) nil [28257 28569])
            ("helm-log-save-maybe" function nil nil [28571 29624])
            ("helm-open-last-log" function (:user-visible-flag t) nil [29641 29942])
            ("helm-print-error-messages" function nil nil [29944 30135])
            ("helm-aif" function (:arguments ("test-form" "then-form" "else-forms")) nil [30161 30459])
            ("helm-mklist" function (:arguments ("obj")) nil [30461 30656])
            ("helm-this-command" function nil nil [30658 31188])
            ("helm-buffer-get" function nil nil [31205 31368])
            ("helm-window" function nil nil [31370 31470])
            ("helm-action-window" function nil nil [31472 31587])
            ("with-helm-window" function (:arguments ("body")) nil [31589 31761])
            ("with-helm-current-buffer" function (:arguments ("body")) nil [31763 32131])
            ("with-helm-buffer" function (:arguments ("body")) nil [32133 32297])
            ("with-helm-restore-variables" function (:arguments ("body")) nil [32299 32751])
            ("with-helm-default-directory" function (:arguments ("directory" "body")) nil [32753 33035])
            ("helm-default-directory" function nil nil [33037 33192])
            ("with-helm-temp-hook" function (:arguments ("hook" "body")) nil [33194 33537])
            ("with-helm-after-update-hook" function (:arguments ("body")) nil [33539 33721])
            ("helm-attr" function (:arguments ("attribute-name" "src" "compute")) nil [33723 34093])
            ("helm-attr-defined" function (:arguments ("attribute-name" "src")) nil [34095 34338])
            ("helm-attrset" function (:arguments ("attribute-name" "value" "src")) nil [34340 34807])
            ("helm-get-attribute-from-source-type" function (:arguments ("attribute" "source")) nil [34809 35049])
            ("helm-get-attribute-from-type" function (:arguments ("attribute" "type")) nil [35051 35249])
            ("helm-get-actions-from-type" function (:arguments ("source")) nil [35251 35432])
            ("helm-inherit-attribute-from-source" function (:arguments ("attribute" "source")) nil [35434 35633])
            ("helm-append-at-nth" function (:arguments ("seq" "elm" "index")) nil [35635 35932])
            ("helm-add-action-to-source" function (:arguments ("name" "fn" "source" "index")) nil [35934 36935])
            ("helm-delete-action-from-source" function (:arguments ("action-or-name" "source")) nil [36937 37527])
            ("helm-add-action-to-source-if" function (:arguments ("name" "fn" "source" "predicate" "index" "test-only")) nil [37529 39820])
            ("helm-set-source-filter" function (:arguments ("sources")) nil [39822 41207])
            ("helm-set-sources" function (:arguments ("sources" "no-init" "no-update")) nil [41209 41675])
            ("helm-get-sources" function nil nil [41677 42227])
            ("helm-get-selection" function (:arguments ("buffer" "force-display-part")) nil [42229 44005])
            ("helm-get-action" function nil nil [44007 44432])
            ("helm-get-current-source" function nil nil [44434 45885])
            ("helm-buffer-is-modified" function (:arguments ("buffer")) nil [45887 46352])
            ("helm-current-buffer-is-modified" function nil nil [46354 46517])
            ("helm-run-after-quit" function (:arguments ("function" "args")) nil [46519 46821])
            ("define-helm-type-attribute" function (:arguments ("type" "definition" "doc")) nil [46824 47314])
            ("helm-document-attribute" function (:arguments ("attribute" "short-doc" "long-doc")) nil [47316 47857])
            ("put" code nil nil [47859 47913])
            ("helm-interpret-value" function (:arguments ("value" "source")) nil [47915 48666])
            ("helm-empty-buffer-p" function (:arguments ("buffer")) nil [48690 48888])
            ("helm-empty-source-p" function nil nil [48890 49364])
            ("helm-let-internal" function (:arguments ("binding" "bodyfunc")) nil [49366 49823])
            ("helm-current-line-contents" function nil nil [49842 49988])
            ("helm-funcall-with-source" function (:arguments ("source" "functions" "args")) nil [49990 50501])
            ("helm-funcall-foreach" function (:arguments ("sym" "sources")) nil [50503 50778])
            ("helm-normalize-sources" function (:arguments ("sources")) nil [50780 51072])
            ("helm-approximate-candidate-number" function (:arguments ("in-current-source")) nil [51074 52596])
            ("with-helm-quittable" function (:arguments ("body")) nil [52598 52901])
            ("helm-compose" function (:arguments ("arg-lst" "func-lst")) nil [52903 54230])
            ("helm-composed-funcall-with-source" function (:arguments ("source" "funcs" "args")) nil [54232 54641])
            ("helm-argument-keys" variable
               (:constant-flag t
                :default-value (quote (:sources :input :prompt :resume :preselect :buffer :keymap :default :history)))
                nil [54666 54781])
            ("helm" function (:arguments ("plist")) nil [54783 58680])
            ("helm-alive-p" function nil nil [58682 59026])
            ("helm-parse-keys" function (:arguments ("keys")) nil [59028 59992])
            ("helm-internal" function (:arguments ("any-sources" "any-input" "any-prompt" "any-resume" "any-preselect" "any-buffer" "any-keymap" "any-default" "any-history")) nil [60023 62669])
            ("helm-resume" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [62711 64270])
            ("helm-resume-previous-session-after-quit" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [64287 64608])
            ("helm-resume-list-buffers-after-quit" function (:user-visible-flag t) nil [64625 64911])
            ("helm-resume-p" function (:arguments ("any-resume")) nil [64913 65019])
            ("helm-resume-select-buffer" function nil nil [65021 65449])
            ("helm-other-buffer" function (:arguments ("any-sources" "any-buffer")) nil [65468 65686])
            ("helm-nest" function (:arguments ("same-as-helm")) nil [65688 67096])
            ("helm-current-position" function (:arguments ("save-or-restore")) nil [67123 67903])
            ("helm-frame-or-window-configuration" function (:arguments ("save-or-restore")) nil [67905 69320])
            ("helm-split-window-default-fn" function (:arguments ("window")) nil [69322 70659])
            ("helm-display-buffer" function (:arguments ("buffer")) nil [70694 72068])
            ("helm-default-display-buffer" function (:arguments ("buffer")) nil [72070 72771])
            ("helm-initialize" function (:arguments ("any-resume" "any-input" "any-default" "any-sources")) nil [72799 73696])
            ("helm-initialize-overlays" function (:arguments ("buffer")) nil [73698 74208])
            ("helm-restore-position-on-quit" function nil nil [74210 74346])
            ("helm-recent-push" function (:arguments ("elt" "list-var")) nil [74348 74609])
            ("helm-initial-setup" function (:arguments ("any-default")) nil [74611 76390])
            ("helm-create-helm-buffer" function nil nil [76392 77675])
            ("helm-read-pattern-maybe" function (:arguments ("any-prompt" "any-input" "any-preselect" "any-resume" "any-keymap" "any-default" "any-history")) nil [77677 82481])
            ("helm-exit-or-quit-maybe" function nil nil [82483 83143])
            ("helm-toggle-suspend-update" function (:user-visible-flag t) nil [83160 83576])
            ("tramp-read-passwd" function (:arguments ("around" "disable-helm-update" "activate")) nil [83578 83813])
            ("helm-maybe-update-keymap" function nil nil [83815 84328])
            ("add-hook" code nil nil [84329 84397])
            ("helm-cleanup" function nil nil [84420 85204])
            ("helm-clean-up-minibuffer" function nil nil [85206 85546])
            ("helm-check-minibuffer-input" function nil nil [85581 85833])
            ("helm-check-new-input" function (:arguments ("input")) nil [85835 86718])
            ("helm-compile-sources" function (:arguments ("sources" "funcs")) nil [86754 87138])
            ("helm-process-delayed-init" function (:arguments ("source")) nil [87166 87613])
            ("helm-get-candidates" function (:arguments ("source")) nil [87615 89820])
            ("helm-while-no-input" function (:arguments ("body")) nil [89822 90122])
            ("helm-get-cached-candidates" function (:arguments ("source")) nil [90124 91119])
            ("helm-transform-mapcar" function (:arguments ("function" "args")) nil [91156 91667])
            ("helm-process-candidate-transformer" function (:arguments ("candidates" "source")) nil [91669 91941])
            ("helm-process-filtered-candidate-transformer" function (:arguments ("candidates" "source")) nil [91943 92249])
            ("helm-process-filtered-candidate-transformer-maybe" function (:arguments ("candidates" "source" "process-p")) nil [92251 92697])
            ("helm-process-real-to-display" function (:arguments ("candidates" "source")) nil [92699 93313])
            ("helm-transform-candidates" function (:arguments ("candidates" "source" "process-p")) nil [93315 93883])
            ("helm-candidate-number-limit" function (:arguments ("source")) nil [93917 94345])
            ("helm-candidate-get-display" function (:arguments ("candidate")) nil [94347 94557])
            ("helm-process-pattern-transformer" function (:arguments ("pattern" "source")) nil [94559 94815])
            ("helm-default-match-function" function (:arguments ("candidate")) nil [94817 95015])
            ("helm-match-functions" function (:arguments ("source")) nil [95017 95272])
            ("helm-accumulate-candidates-internal" function (:arguments ("cand" "newmatches" "hash" "item-count" "limit")) nil [95274 95727])
            ("helm-take-first-elements" function (:arguments ("seq" "n")) nil [95729 95958])
            ("helm-set-case-fold-search" function (:arguments ("pattern")) nil [95960 96815])
            ("helm-set-case-fold-search-1" function (:arguments ("pattern")) nil [96817 97027])
            ("helm-match-from-candidates" function (:arguments ("cands" "matchfns" "limit" "source")) nil [97029 98126])
            ("helm-compute-matches" function (:arguments ("source")) nil [98128 99132])
            ("helm-process-source" function (:arguments ("source")) nil [99134 99869])
            ("helm-process-delayed-sources" function (:arguments ("delayed-sources" "preselect" "source")) nil [99871 101020])
            ("helm-update" function (:arguments ("preselect" "source")) nil [101049 104238])
            ("helm-update-source-p" function (:arguments ("source")) nil [104240 105129])
            ("helm-delayed-source-p" function (:arguments ("source")) nil [105131 105391])
            ("helm-update-move-first-line" function (:arguments ("without-hook")) nil [105393 105619])
            ("helm-force-update" function
               (:user-visible-flag t
                :arguments ("preselect"))
                nil [105636 106463])
            ("helm-force-update--reinit" function (:arguments ("source")) nil [106465 106836])
            ("helm-remove-candidate-cache" function (:arguments ("source")) nil [106838 106991])
            ("helm-insert-match" function (:arguments ("match" "insert-function" "source")) nil [106993 108098])
            ("helm-insert-header-from-source" function (:arguments ("source")) nil [108100 108475])
            ("helm-insert-header" function (:arguments ("name" "display-string")) nil [108477 109180])
            ("helm-insert-candidate-separator" function nil nil [109182 109469])
            ("helm-output-filter" function (:arguments ("process" "output-string")) nil [109500 109684])
            ("helm-output-filter-1" function (:arguments ("process-assoc" "output-string")) nil [109686 110334])
            ("helm-output-filter--process-source" function (:arguments ("process" "output-string" "source" "limit")) nil [110336 111138])
            ("helm-output-filter--collect-candidates" function (:arguments ("lines" "incomplete-line-info")) nil [111140 112210])
            ("helm-output-filter--post-process" function nil nil [112212 112640])
            ("helm-process-deferred-sentinel-hook" function (:arguments ("process" "event" "file")) nil [112642 114253])
            ("helm-kill-async-processes" function nil nil [114255 114513])
            ("helm-kill-async-process" function (:arguments ("process")) nil [114519 114693])
            ("helm-execute-selection-action" function nil nil [114717 115211])
            ("helm-execute-selection-action-1" function (:arguments ("selection" "action" "preserve-saved-action")) nil [115213 116216])
            ("helm-coerce-selection" function (:arguments ("selection" "source")) nil [116218 116473])
            ("helm-get-default-action" function (:arguments ("action")) nil [116475 116658])
            ("helm-select-action" function (:user-visible-flag t) nil [116675 117722])
            ("helm-show-action-buffer" function (:arguments ("actions")) nil [117724 118509])
            ("helm-display-source-at-screen-top-maybe" function (:arguments ("unit")) nil [118533 118865])
            ("helm-skip-noncandidate-line" function (:arguments ("direction")) nil [118867 119289])
            ("helm-skip-header-and-separator-line" function (:arguments ("direction")) nil [119319 119777])
            ("helm-display-mode-line" function (:arguments ("source")) nil [119779 121357])
            ("helm-show-candidate-number" function (:arguments ("name")) nil [121361 121775])
            ("helm-move-selection-common" function (:arguments ("where" "direction")) nil [121777 123537])
            ("helm-move--previous-line-fn" function nil nil [123539 124084])
            ("helm-move--next-line-fn" function nil nil [124086 124516])
            ("helm-move--previous-page-fn" function nil nil [124518 124649])
            ("helm-move--next-page-fn" function nil nil [124651 124770])
            ("helm-move--beginning-of-buffer-fn" function nil nil [124772 124842])
            ("helm-move--end-of-buffer-fn" function nil nil [124844 124908])
            ("helm-move--previous-source-fn" function nil nil [124910 125132])
            ("helm-move--next-source-fn" function nil nil [125134 125228])
            ("helm-move--goto-source-fn" function (:arguments ("source-or-name")) nil [125230 125597])
            ("helm-previous-line" function (:user-visible-flag t) nil [125614 125765])
            ("helm-next-line" function (:user-visible-flag t) nil [125782 125921])
            ("helm-previous-page" function (:user-visible-flag t) nil [125938 126088])
            ("helm-next-page" function (:user-visible-flag t) nil [126105 126250])
            ("helm-beginning-of-buffer" function (:user-visible-flag t) nil [126267 126414])
            ("helm-end-of-buffer" function (:user-visible-flag t) nil [126431 126571])
            ("helm-previous-source" function (:user-visible-flag t) nil [126588 126745])
            ("helm-next-source" function (:user-visible-flag t) nil [126762 126907])
            ("helm-goto-source" function (:arguments ("source-or-name")) nil [126909 127075])
            ("helm-mark-current-line" function (:arguments ("resumep")) nil [127077 127896])
            ("helm-confirm-and-exit-minibuffer" function (:user-visible-flag t) nil [127913 129136])
            ("add-hook" code nil nil [129137 129199])
            ("helm-confirm-and-exit-hook" function nil nil [129201 129484])
            ("helm-exit-minibuffer" function (:user-visible-flag t) nil [129501 129745])
            ("helm-keyboard-quit" function (:user-visible-flag t) nil [129762 130023])
            ("helm-get-next-header-pos" function nil nil [130025 130168])
            ("helm-get-previous-header-pos" function nil nil [130170 130325])
            ("helm-pos-multiline-p" function nil nil [130327 130482])
            ("helm-get-next-candidate-separator-pos" function nil nil [130484 130666])
            ("helm-get-previous-candidate-separator-pos" function nil nil [130668 130862])
            ("helm-pos-header-line-p" function nil nil [130864 131067])
            ("helm-pos-candidate-separator-p" function nil nil [131069 131232])
            ("helm-debug-output" function (:user-visible-flag t) nil [131271 131432])
            ("helm-debug-output-function" function (:arguments ("vars")) nil [131434 131941])
            ("helm-kill-buffer-hook" function nil nil [131959 132228])
            ("add-hook" code nil nil [132229 132280])
            ("helm-preselect" function (:arguments ("candidate-or-regexp" "source")) nil [132282 132810])
            ("helm-delete-current-selection" function (:user-visible-flag t) nil [132827 133886])
            ("helm-end-of-source-p" function (:arguments ("at-point")) nil [133888 134140])
            ("helm-edit-current-selection-internal" function (:arguments ("func")) nil [134142 134708])
            ("helm-edit-current-selection" function (:arguments ("forms")) nil [134710 134965])
            ("helm-set-pattern" function (:arguments ("pattern" "noupdate")) nil [134967 135302])
            ("helm-minibuffer-completion-contents" function nil nil [135304 135510])
            ("helm-delete-minibuffer-contents" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [135527 136224])
            ("helm-compile-source--type" function (:arguments ("source")) nil [136269 136430])
            ("helm-add-type-attribute" function (:arguments ("type" "definition")) nil [136480 136695])
            ("helm-document-type-attribute" function (:arguments ("type" "doc")) nil [136697 136866])
            ("helm-dummy-candidate" function (:arguments ("candidate" "source")) nil [136895 137070])
            ("helm-compile-source--dummy" function (:arguments ("source")) nil [137072 137535])
            ("helm-candidates-in-buffer" function nil nil [137579 140844])
            ("helm-candidates-in-buffer-search-from-start" function (:arguments ("pattern")) nil [140846 141016])
            ("helm-candidates-in-buffer-search-from-end" function (:arguments ("pattern")) nil [141018 141188])
            ("helm-candidates-in-buffer-1" function (:arguments ("buffer" "pattern" "get-line-fn" "search-fns" "limit" "search-from-end" "match-part-fn")) nil [141190 141991])
            ("helm-point-is-moved" function (:arguments ("proc")) nil [141993 142151])
            ("helm-search-from-candidate-buffer" function (:arguments ("pattern" "get-line-fn" "search-fns" "limit" "search-from-end" "start-point" "endp" "match-part-fn")) nil [142153 143761])
            ("helm-search-match-part" function (:arguments ("candidate" "pattern" "match-part-fn")) nil [143763 144117])
            ("helm-initial-candidates-from-candidate-buffer" function (:arguments ("endp" "get-line-fn" "limit" "search-from-end")) nil [144119 144715])
            ("helm-search-from-candidate-buffer-internal" function (:arguments ("search-fn")) nil [144717 145042])
            ("helm-candidate-buffer" function (:arguments ("create-or-buffer")) nil [145044 147697])
            ("helm-init-candidates-in-buffer" function (:arguments ("buffer" "data")) nil [147699 148399])
            ("helm-compile-source--candidates-in-buffer" function (:arguments ("source")) nil [148401 148660])
            ("helm-toggle-resplit-window" function (:user-visible-flag t) nil [148711 150154])
            ("helm-enlarge-window-1" function (:arguments ("n")) nil [150188 150462])
            ("helm-narrow-window" function (:user-visible-flag t) nil [150479 150577])
            ("helm-enlarge-window" function (:user-visible-flag t) nil [150594 150693])
            ("helm-swap-windows" function (:user-visible-flag t) nil [150710 152382])
            ("helm-replace-buffer-in-window" function (:arguments ("window" "buffer1" "buffer2")) nil [152384 152628])
            ("helm-select-nth-action" function (:arguments ("n")) nil [152671 152982])
            ("helm-get-nth-action" function (:arguments ("n" "action")) nil [152984 153321])
            ("helm-select-2nd-action" function (:user-visible-flag t) nil [153338 153480])
            ("helm-select-3rd-action" function (:user-visible-flag t) nil [153497 153639])
            ("helm-select-4th-action" function (:user-visible-flag t) nil [153656 153798])
            ("helm-select-2nd-action-or-end-of-line" function (:user-visible-flag t) nil [153815 154100])
            ("with-helm-display-same-window" function (:arguments ("body")) nil [154132 154435])
            ("helm-initialize-persistent-action" function nil nil [154437 154554])
            ("helm-execute-persistent-action" function
               (:user-visible-flag t
                :arguments ("attr" "split-onewindow"))
                nil [154571 156795])
            ("helm-persistent-action-display-window" function (:arguments ("split-onewindow")) nil [156797 157522])
            ("helm-select-persistent-action-window" function (:arguments ("split-onewindow")) nil [157524 157909])
            ("helm-persistent-action-display-buffer" function (:arguments ("buf" "action")) nil [157911 160048])
            ("helm-other-window-base" function (:arguments ("command" "scroll-amount")) nil [160103 160372])
            ("helm-scroll-other-window" function (:user-visible-flag t) nil [160389 160530])
            ("helm-scroll-other-window-down" function (:user-visible-flag t) nil [160547 160697])
            ("helm-recenter-top-bottom-other-window" function (:user-visible-flag t) nil [160714 160899])
            ("helm-reposition-window-other-window" function (:user-visible-flag t) nil [160916 161100])
            ("helm-clear-visible-mark" function nil nil [161131 161325])
            ("add-hook" code nil nil [161326 161389])
            ("helm-this-visible-mark" function nil nil [161391 161540])
            ("helm-delete-visible-mark" function (:arguments ("overlay")) nil [161542 161841])
            ("helm-make-visible-mark" function nil nil [161843 162335])
            ("helm-toggle-visible-mark" function (:user-visible-flag t) nil [162352 162593])
            ("helm-mark-all" function (:user-visible-flag t) nil [162610 164466])
            ("helm-unmark-all" function (:user-visible-flag t) nil [164483 164835])
            ("helm-toggle-all-marks" function (:user-visible-flag t) nil [164852 165244])
            ("helm-display-all-visible-marks" function (:user-visible-flag t) nil [165261 165650])
            ("helm-marked-candidates" function nil nil [165652 166281])
            ("helm-reset-marked-candidates" function nil nil [166283 166424])
            ("add-hook" code nil nil [166426 166494])
            ("helm-current-source-name=" function (:arguments ("name")) nil [166496 166648])
            ("helm-revive-visible-mark" function nil nil [166650 167516])
            ("add-hook" code nil nil [167517 167571])
            ("helm-next-point-in-list" function (:arguments ("curpos" "points" "prev")) nil [167573 168179])
            ("helm-next-visible-mark" function
               (:user-visible-flag t
                :arguments ("prev"))
                nil [168196 168572])
            ("helm-prev-visible-mark" function (:user-visible-flag t) nil [168589 168704])
            ("helm-yank-selection" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [168749 169015])
            ("helm-kill-selection-and-quit" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [169032 169326])
            ("helm-follow-mode" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [169411 171565])
            ("helm-follow-execute-persistent-action-maybe" function nil nil [171567 172067])
            ("helm" package nil nil [172070 172085]))          
      :file "helm.el"
      :pointmax 172234
      :fsize 172233
      :lastmodtime '(21032 36649 374388 842000)
      :unmatched-syntax nil)
    (semanticdb-table "helm-config.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("easymenu" include nil nil [812 831])
            ("helm-aliases" include nil nil [832 855])
            ("helm-config" customgroup (:user-visible-flag t) nil [859 937])
            ("helm-command-prefix-key" variable (:default-value "C-x c") nil [939 1421])
            ("helm-minibuffer-history-key" variable (:default-value "C-r") nil [1423 2450])
            ("helm-command-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map (kbd "a") (quote helm-apropos)) (define-key map (kbd "e") (quote helm-etags-select)) (define-key map (kbd "l") (quote helm-locate)) (define-key map (kbd "s") (quote helm-surfraw)) (define-key map (kbd "r") (quote helm-regexp)) (define-key map (kbd "w") (quote helm-w3m-bookmarks)) (define-key map (kbd "x") (quote helm-firefox-bookmarks)) (define-key map (kbd "#") (quote helm-emms)) (define-key map (kbd "m") (quote helm-man-woman)) (define-key map (kbd "t") (quote helm-top)) (define-key map (kbd "/") (quote helm-find)) (define-key map (kbd "i") (quote helm-imenu)) (define-key map (kbd "<tab>") (quote helm-lisp-completion-at-point)) (define-key map (kbd "p") (quote helm-list-emacs-process)) (define-key map (kbd "C-x r b") (quote helm-bookmarks)) (define-key map (kbd "M-y") (quote helm-show-kill-ring)) (define-key map (kbd "C-c <SPC>") (quote helm-all-mark-rings)) (define-key map (kbd "C-x C-f") (quote helm-find-files)) (define-key map (kbd "f") (quote helm-for-files)) (define-key map (kbd "C-:") (quote helm-eval-expression-with-eldoc)) (define-key map (kbd "C-,") (quote helm-calcul-expression)) (define-key map (kbd "M-x") (quote helm-M-x)) (define-key map (kbd "M-s o") (quote helm-occur)) (define-key map (kbd "M-g s") (quote helm-do-grep)) (define-key map (kbd "c") (quote helm-colors)) (define-key map (kbd "F") (quote helm-select-xfont)) (define-key map (kbd "8") (quote helm-ucs)) (define-key map (kbd "C-c f") (quote helm-recentf)) (define-key map (kbd "C-c g") (quote helm-google-suggest)) (define-key map (kbd "h i") (quote helm-info-at-point)) (define-key map (kbd "h r") (quote helm-info-emacs)) (define-key map (kbd "h g") (quote helm-info-gnus)) (define-key map (kbd "C-x C-b") (quote helm-buffers-list)) (define-key map (kbd "C-c C-b") (quote helm-browse-code)) (define-key map (kbd "C-x r i") (quote helm-register)) (define-key map (kbd "C-c C-x") (quote helm-run-external-command)) (define-key map (kbd "b") (quote helm-resume)) map)) nil [2478 4630])
            ("helm-command-prefix" variable nil nil [4751 4779])
            ("define-prefix-command" code nil nil [4780 4824])
            ("fset" code nil nil [4825 4869])
            ("setq" code nil nil [4870 4914])
            ("easy-menu-add-item" code nil nil [4933 6670])
            ("easy-menu-add-item" code nil nil [6672 6734])
            ("helm-configuration" function (:user-visible-flag t) nil [6751 6845])
            ("dolist" code nil nil [6860 7870])
            ("helm-define-multi-key" function (:prototype-flag t) nil [8031 8757])
            ("helm-open-last-log" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [8759 8918])
            ("helm-resume" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [8920 9193])
            ("helm-resume-previous-session-after-quit" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [9195 9324])
            ("helm-resume-list-buffers-after-quit" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [9326 9446])
            ("helm-other-buffer" function (:prototype-flag t) nil [9448 9641])
            ("helm-toggle-suspend-update" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [9643 9811])
            ("helm-force-update" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [9813 10209])
            ("helm-select-action" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [10211 10375])
            ("helm-previous-line" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [10377 10468])
            ("helm-next-line" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [10470 10553])
            ("helm-previous-page" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [10555 10645])
            ("helm-next-page" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [10647 10736])
            ("helm-beginning-of-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [10738 10825])
            ("helm-end-of-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [10827 10911])
            ("helm-previous-source" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [10913 11008])
            ("helm-next-source" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [11010 11097])
            ("helm-confirm-and-exit-minibuffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [11099 11476])
            ("helm-exit-minibuffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [11478 11590])
            ("helm-keyboard-quit" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [11592 11711])
            ("helm-debug-output" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [11713 11812])
            ("helm-delete-current-selection" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [11814 11915])
            ("helm-delete-minibuffer-contents" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [11917 12185])
            ("helm-toggle-resplit-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [12187 12305])
            ("helm-narrow-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [12307 12381])
            ("helm-enlarge-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [12383 12459])
            ("helm-swap-windows" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [12461 12567])
            ("helm-select-2nd-action" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [12569 12687])
            ("helm-select-3rd-action" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [12689 12807])
            ("helm-select-4th-action" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [12809 12927])
            ("helm-select-2nd-action-or-end-of-line" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [12929 13152])
            ("helm-execute-persistent-action" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [13154 13695])
            ("helm-scroll-other-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [13697 13805])
            ("helm-scroll-other-window-down" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [13807 13922])
            ("helm-recenter-top-bottom-other-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [13924 14056])
            ("helm-reposition-window-other-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [14058 14191])
            ("helm-toggle-visible-mark" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [14193 14288])
            ("helm-mark-all" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [14290 14395])
            ("helm-unmark-all" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [14397 14510])
            ("helm-toggle-all-marks" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [14512 14718])
            ("helm-display-all-visible-marks" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [14720 14852])
            ("helm-next-visible-mark" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [14854 14994])
            ("helm-prev-visible-mark" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [14996 15087])
            ("helm-yank-selection" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [15089 15260])
            ("helm-kill-selection-and-quit" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [15262 15426])
            ("helm-follow-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [15428 16454])
            ("helm-reset-adaptative-history" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [16612 16807])
            ("helm-apt" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [16943 17083])
            ("helm-bbdb" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [17231 17355])
            ("helm-bmkext-run-edit" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [17501 17606])
            ("helm-bookmark-ext" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [17608 17853])
            ("helm-bookmark-toggle-filename" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [18005 18116])
            ("helm-bookmark-run-jump-other-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [18118 18230])
            ("helm-bookmark-run-delete" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [18232 18332])
            ("helm-bookmarks" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [18334 18429])
            ("helm-pp-bookmarks" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [18431 18546])
            ("helm-buffer-diff-persistent" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [18694 18807])
            ("helm-buffer-revert-persistent" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [18809 18919])
            ("helm-buffer-save-persistent" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [18921 19027])
            ("helm-buffer-run-kill-buffers" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [19029 19157])
            ("helm-buffer-run-grep" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [19159 19272])
            ("helm-buffer-run-zgrep" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [19274 19388])
            ("helm-buffer-run-query-replace-regexp" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [19390 19535])
            ("helm-buffer-run-query-replace" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [19537 19668])
            ("helm-buffer-switch-other-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [19670 19812])
            ("helm-buffer-switch-other-frame" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [19814 19954])
            ("helm-buffer-switch-to-elscreen" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [19956 20094])
            ("helm-buffer-run-ediff" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [20096 20211])
            ("helm-buffers-run-multi-occur" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [20213 20326])
            ("helm-buffers-list" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [20328 20476])
            ("helm-simple-call-tree" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [20651 20885])
            ("helm-colors" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [21038 21123])
            ("helm-M-x" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [21272 21435])
            ("helm-dabbrev" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [21584 21641])
            ("helm-lisp-completion-at-point" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [21784 21893])
            ("helm-complete-file-name-at-point" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [21895 22014])
            ("helm-lisp-indent" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [22016 22075])
            ("helm-lisp-completion-or-file-name-at-point" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [22077 22280])
            ("helm-apropos" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [22282 22409])
            ("helm-manage-advice" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [22411 22528])
            ("helm-locate-library" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [22530 22592])
            ("helm-timers" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [22594 22680])
            ("helm-complex-command-history" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [22682 22753])
            ("helm-elscreen" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [22917 23012])
            ("helm-emms" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [23160 23249])
            ("helm-esh-pcomplete" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [23394 23512])
            ("helm-eshell-history" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [23514 23615])
            ("helm-eval-expression" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [23754 23875])
            ("helm-eval-expression-with-eldoc" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [23877 24027])
            ("helm-calcul-expression" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [24029 24149])
            ("helm-run-external-command" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [24325 24595])
            ("helm-ff-run-toggle-auto-update" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [24738 24811])
            ("helm-ff-run-switch-to-history" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [24813 24944])
            ("helm-ff-run-grep" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [24946 25051])
            ("helm-ff-run-pdfgrep" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [25053 25164])
            ("helm-ff-run-zgrep" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [25166 25272])
            ("helm-ff-run-copy-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [25274 25389])
            ("helm-ff-run-rename-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [25391 25510])
            ("helm-ff-run-byte-compile-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [25512 25643])
            ("helm-ff-run-load-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [25645 25760])
            ("helm-ff-run-eshell-command-on-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [25762 25903])
            ("helm-ff-run-ediff-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [25905 26022])
            ("helm-ff-run-ediff-merge-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [26024 26153])
            ("helm-ff-run-symlink-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [26155 26276])
            ("helm-ff-run-hardlink-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [26278 26401])
            ("helm-ff-run-delete-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [26403 26522])
            ("helm-ff-run-complete-fn-at-point" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [26524 26659])
            ("helm-ff-run-switch-to-eshell" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [26661 26790])
            ("helm-ff-run-switch-other-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [26792 26930])
            ("helm-ff-run-switch-other-frame" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [26932 27068])
            ("helm-ff-run-open-file-externally" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [27070 27215])
            ("helm-ff-run-open-file-with-default-tool" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [27217 27369])
            ("helm-ff-run-locate" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [27371 27480])
            ("helm-ff-run-find-file-as-root" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [27482 27554])
            ("helm-ff-run-gnus-attach-files" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [27556 27695])
            ("helm-ff-run-etags" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [27697 27812])
            ("helm-ff-run-print-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [27814 27931])
            ("helm-ff-run-toggle-basename" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [27933 28003])
            ("helm-find-files-down-one-level" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [28005 28176])
            ("helm-ff-properties-persistent" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [28178 28288])
            ("helm-ff-persistent-delete" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [28290 28400])
            ("helm-ff-run-kill-buffer-persistent" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [28402 28532])
            ("helm-ff-rotate-left-persistent" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [28534 28647])
            ("helm-ff-rotate-right-persistent" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [28649 28764])
            ("helm-ff-file-name-history" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [28766 28899])
            ("helm-browse-project" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [28901 29291])
            ("helm-ff-run-browse-project" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [29293 29362])
            ("helm-ff-run-find-sh-command" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [29364 29496])
            ("helm-find" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [29498 29602])
            ("helm-find-files" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [29604 29906])
            ("helm-for-files" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [29908 30064])
            ("helm-recentf" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [30066 30156])
            ("helm-firefox-bookmarks" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [30305 30750])
            ("helm-select-xfont" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [30915 31011])
            ("helm-ucs" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [31013 31111])
            ("helm-gentoo" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [31267 31360])
            ("helm-goto-precedent-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [31500 31614])
            ("helm-goto-next-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [31616 31725])
            ("helm-grep-run-persistent-action" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [31727 31849])
            ("helm-grep-run-default-action" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [31851 31967])
            ("helm-grep-run-other-window-action" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [31969 32100])
            ("helm-grep-run-other-frame-action" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [32102 32231])
            ("helm-grep-run-save-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [32233 32351])
            ("helm-grep-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [32353 32507])
            ("helm-gm-next-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [32509 32568])
            ("helm-gm-precedent-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [32570 32634])
            ("helm-grep-mode-quit" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [32636 32697])
            ("helm-grep-mode-jump" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [32699 32760])
            ("helm-grep-mode-jump-other-window-forward" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [32762 32844])
            ("helm-grep-mode-jump-other-window-backward" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [32846 32929])
            ("helm-grep-mode-jump-other-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [32931 33005])
            ("helm-do-grep" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [33007 33600])
            ("helm-do-zgrep" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [33602 33686])
            ("helm-do-pdfgrep" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [33688 33776])
            ("helm-mode-line-string" variable (:default-value "\\<helm-map>\\[helm-help]:Help \\[helm-select-action]:Act \\[helm-exit-minibuffer]/\\[helm-select-2nd-action-or-end-of-line]/\\[helm-select-3rd-action]:NthAct") nil [33915 34370])
            ("helm-help" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [34372 34438])
            ("helm-buffer-help" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [34440 34528])
            ("helm-ff-help" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [34530 34619])
            ("helm-read-file-name-help" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [34621 34687])
            ("helm-generic-file-help" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [34689 34753])
            ("helm-grep-help" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [34755 34811])
            ("helm-pdfgrep-help" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [34813 34872])
            ("helm-etags-help" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [34874 34959])
            ("helm-ucs-help" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [34961 35044])
            ("helm-bookmark-help" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [35046 35133])
            ("helm-esh-help" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [35135 35248])
            ("helm-buffers-ido-virtual-help" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [35250 35358])
            ("helm-moccur-help" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [35360 35418])
            ("helm-top-help" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [35420 35475])
            ("helm-apt-help" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [35477 35532])
            ("helm-buffer-mode-line-string" variable (:default-value (quote ("Buffer(s)" "\\<helm-buffer-map>\\[helm-buffer-help]:Help \\<helm-map>\\[helm-select-action]:Act \\[helm-exit-minibuffer]/\\[helm-select-2nd-action-or-end-of-line]/\\[helm-select-3rd-action]:NthAct" "String displayed in mode-line in `helm-source-buffers-list'"))) nil [35534 35835])
            ("helm-buffers-ido-virtual-mode-line-string" variable (:default-value (quote ("Killed Buffer(s)" "\\<helm-buffers-ido-virtual-map>\\[helm-buffers-ido-virtual-help]:Help \\<helm-map>\\[helm-select-action]:Act \\[helm-exit-minibuffer]/\\[helm-select-2nd-action-or-end-of-line]/\\[helm-select-3rd-action]:NthAct" "String displayed in mode-line in `helm-source-buffers-list'"))) nil [35837 36184])
            ("helm-ff-mode-line-string" variable (:default-value "\\<helm-find-files-map>\\[helm-ff-help]:Help \\<helm-map>\\[helm-select-action]:Act \\[helm-exit-minibuffer]/\\[helm-select-2nd-action-or-end-of-line]/\\[helm-select-3rd-action]:NthAct") nil [36186 36468])
            ("helm-read-file-name-mode-line-string" variable (:default-value "\\<helm-read-file-map>\\[helm-read-file-name-help]:Help \\[helm-cr-empty-string]:Empty \\<helm-map>\\[helm-select-action]:Act \\[helm-exit-minibuffer]/\\[helm-select-2nd-action-or-end-of-line]/\\[helm-select-3rd-action]:NthAct") nil [36470 36807])
            ("helm-generic-file-mode-line-string" variable (:default-value "\\<helm-generic-files-map>\\[helm-generic-file-help]:Help \\<helm-map>\\[helm-select-action]:Act \\[helm-exit-minibuffer]/\\[helm-select-2nd-action-or-end-of-line]/\\[helm-select-3rd-action]:NthAct \\[helm-toggle-suspend-update]:Tog.suspend") nil [36809 37140])
            ("helm-grep-mode-line-string" variable (:default-value "\\<helm-grep-map>\\[helm-grep-help]:Help \\<helm-map>\\[helm-select-action]:Act \\[helm-exit-minibuffer]/\\[helm-select-2nd-action-or-end-of-line]/\\[helm-select-3rd-action]:NthAct \\[helm-toggle-suspend-update]:Tog.suspend") nil [37142 37456])
            ("helm-pdfgrep-mode-line-string" variable (:default-value "\\<helm-pdfgrep-map>\\[helm-pdfgrep-help]:Help \\<helm-map>\\[helm-select-action]:Act \\[helm-exit-minibuffer]/\\[helm-select-2nd-action-or-end-of-line]/\\[helm-select-3rd-action]:NthAct \\[helm-toggle-suspend-update]:Tog.suspend") nil [37458 37784])
            ("helm-etags-mode-line-string" variable (:default-value "\\<helm-etags-map>\\[helm-etags-help]:Help \\<helm-map>\\[helm-select-action]:Act \\[helm-exit-minibuffer]/\\[helm-select-2nd-action-or-end-of-line]/\\[helm-select-3rd-action]:NthAct") nil [37786 38065])
            ("helm-ucs-mode-line-string" variable (:default-value "\\<helm-ucs-map>\\[helm-ucs-help]:Help \\<helm-map>\\[helm-select-action]:Act \\[helm-exit-minibuffer]/\\[helm-select-2nd-action-or-end-of-line]/\\[helm-select-3rd-action]:NthAct") nil [38067 38331])
            ("helm-bookmark-mode-line-string" variable (:default-value (quote ("Bookmark(s)" "\\<helm-bookmark-map>\\[helm-bookmark-help]:Help \\<helm-map>\\[helm-select-action]:Act \\[helm-exit-minibuffer]/\\[helm-select-2nd-action-or-end-of-line]/\\[helm-select-3rd-action]:NthAct"))) nil [38333 38644])
            ("helm-occur-mode-line" variable (:default-value "\\<helm-map>\\[helm-help]:Help \\<helm-occur-map>\\[helm-occur-run-query-replace-regexp]:Query replace regexp \\<helm-map>\\[helm-select-action]:Act \\[helm-exit-minibuffer]/\\[helm-select-2nd-action-or-end-of-line]/\\[helm-select-3rd-action]:NthAct \\[helm-toggle-suspend-update]:Tog.suspend") nil [38646 38970])
            ("helm-moccur-mode-line" variable (:default-value "\\<helm-moccur-map>\\[helm-moccur-help]:Help \\<helm-map>\\[helm-select-action]:Act \\[helm-exit-minibuffer]/\\[helm-select-2nd-action-or-end-of-line]/\\[helm-select-3rd-action]:NthAct \\[helm-toggle-suspend-update]:Tog.suspend") nil [38972 39232])
            ("helm-comp-read-mode-line" variable (:default-value "\\<helm-comp-read-map>\\[helm-cr-empty-string]:Empty \\<helm-map>\\[helm-help]:Help \\[helm-select-action]:Act \\[helm-exit-minibuffer]/\\[helm-select-2nd-action-or-end-of-line]/\\[helm-select-3rd-action]:NthAct") nil [39234 39481])
            ("helm-top-mode-line" variable (:default-value "\\<helm-top-map>\\[helm-top-help]:Help \\<helm-map>\\[helm-select-action]:Act \\[helm-exit-minibuffer]/\\[helm-select-2nd-action-or-end-of-line]/\\[helm-select-3rd-action]:NthAct \\[helm-toggle-suspend-update]:Tog.suspend") nil [39483 39734])
            ("helm-apt-mode-line" variable (:default-value "\\<helm-apt-map>\\[helm-apt-help]:Help \\<helm-map>\\[helm-select-action]:Act \\[helm-exit-minibuffer]/\\[helm-select-2nd-action-or-end-of-line]/\\[helm-select-3rd-action]:NthAct \\[helm-toggle-suspend-update]:Tog.suspend") nil [39736 39987])
            ("helm-describe-helm-attribute" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [39989 40158])
            ("helm-imenu" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [40300 40386])
            ("helm-info-at-point" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [40543 40694])
            ("helm-locate" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [40840 41431])
            ("helm-man-woman" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [41568 41714])
            ("helm-match-plugin-mode" variable nil nil [41878 42203])
            ("custom-autoload" code nil nil [42205 42270])
            ("helm-match-plugin-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [42272 42464])
            ("helm-world-time" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [42754 42851])
            ("helm-insert-latex-math" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [42853 42970])
            ("helm-eev-anchors" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [42972 43067])
            ("helm-ratpoison-commands" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [43069 43185])
            ("helm-stumpwm-commands" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [43187 43250])
            ("helm-mini" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [43252 43364])
            ("helm-minibuffer-history" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [43366 43477])
            ("helm-cr-empty-string" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [43617 43699])
            ("helm-comp-read" function (:prototype-flag t) nil [43701 46877])
            ("helm-mode" variable nil nil [46879 47152])
            ("custom-autoload" code nil nil [47154 47198])
            ("helm-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [47200 47888])
            ("helm-surfraw" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [48025 48151])
            ("helm-google-suggest" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [48153 48272])
            ("helm-yahoo-suggest" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [48274 48393])
            ("helm-org-keywords" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [48565 48661])
            ("helm-org-headlines" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [48663 48763])
            ("helm-occur-match-plugin-mode" variable (:default-value t) nil [48909 49256])
            ("custom-autoload" code nil nil [49258 49323])
            ("helm-occur-match-plugin-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [49325 49472])
            ("helm-regexp" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [49474 49632])
            ("helm-occur" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [49634 49717])
            ("helm-occur-from-isearch" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [49719 49819])
            ("helm-multi-occur" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [49821 50150])
            ("helm-multi-occur-from-isearch" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [50152 50467])
            ("helm-browse-code" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [50469 50563])
            ("helm-mark-ring" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [50703 50808])
            ("helm-global-mark-ring" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [50810 50929])
            ("helm-all-mark-rings" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [50931 51076])
            ("helm-register" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [51078 51174])
            ("helm-show-kill-ring" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [51176 51385])
            ("helm-semantic" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [51572 51667])
            ("helm-semantic-or-imenu" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [51669 51939])
            ("helm-top-run-sort-by-com" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [52240 52305])
            ("helm-top-run-sort-by-cpu" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [52307 52372])
            ("helm-top-run-sort-by-mem" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [52374 52439])
            ("helm-top-run-sort-by-user" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [52441 52507])
            ("helm-top" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [52509 52595])
            ("helm-list-emacs-process" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [52597 52700])
            ("helm-xrandr-set" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [52702 52758])
            ("helm-etags-select" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [52897 53152])
            ("helm-show-all-in-this-source-only" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [53295 53511])
            ("helm-display-all-sources" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [53513 53646])
            ("helm-quit-and-find-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [53648 53836])
            ("helm-w32-shell-execute-open-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [53838 53918])
            ("helm-yank-text-at-point" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [53920 54125])
            ("helm-w3m-bookmarks" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [54279 54460])
            ("helm-yaoddmuse-cache-pages" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [54724 54938])
            ("helm-yaoddmuse-emacswiki-edit-or-view" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [54940 55151])
            ("helm-yaoddmuse-emacswiki-post-library" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [55153 55362])
            ("helm-config" package nil nil [55544 55566]))          
      :file "helm-config.el"
      :pointmax 55722
      :fsize 55721
      :lastmodtime '(21032 36649 478388 846000)
      :unmatched-syntax nil)
    (semanticdb-table "helm-aliases.el"
      :file "helm-aliases.el"
      :fsize 67345
      :lastmodtime '(21032 36649 418388 844000)))
  :file "!home!masahiko!.emacs.d!elpa!helm-20130904.1907!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
