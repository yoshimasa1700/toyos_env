;; Object HFMD_demo_softkinetic/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "HFMD_demo_softkinetic/"
  :tables
  (list
    (semanticdb-table "ConsoleDemo.cxx"
      :major-mode 'c++-mode
      :tags 
        '( ("stdio.h" include (:system-flag t) nil [942 960])
            ("vector" include (:system-flag t) nil [961 978])
            ("exception" include (:system-flag t) nil [979 999])
            ("string" include (:system-flag t) nil [1000 1017])
            ("DepthSense.hxx" include (:system-flag t) nil [1019 1044])
            ("opencv2/opencv.hpp" include (:system-flag t) nil [1046 1075])
            ("HFMD_core/CRForest.h" include (:system-flag t) nil [1077 1108])
            ("HFMD_core/util.h" include (:system-flag t) nil [1109 1136])
            ("HFMD_core/CDataset.h" include (:system-flag t) nil [1137 1168])
            ("DepthSense" using (:type ("DepthSense" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [1170 1197])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [1198 1218])
            ("g_context" variable (:type ("Context" type (:type "class") nil nil)) nil [1220 1238])
            ("g_dnode" variable (:type ("DepthNode" type (:type "class") nil nil)) nil [1239 1257])
            ("g_cnode" variable (:type ("ColorNode" type (:type "class") nil nil)) nil [1258 1276])
            ("g_anode" variable (:type ("AudioNode" type (:type "class") nil nil)) nil [1277 1295])
            ("g_aFrames" variable (:type ("uint32_t" type (:type "class") nil nil)) nil [1297 1320])
            ("g_cFrames" variable (:type ("uint32_t" type (:type "class") nil nil)) nil [1321 1344])
            ("g_dFrames" variable (:type ("uint32_t" type (:type "class") nil nil)) nil [1345 1368])
            ("g_bDeviceFound" variable (:type "bool") nil [1370 1398])
            ("g_pProjHelper" variable
               (:pointer 1
                :type ("ProjectionHelper" type (:type "class") nil nil))
                nil [1400 1439])
            ("g_scp" variable (:type ("StereoCameraParameters" type (:type "class") nil nil)) nil [1440 1469])
            ("imageNum" variable (:type "int") nil [1471 1488])
            ("g_depth" variable (:type ("cv::Mat" type (:type "class") nil nil)) nil [1490 1514])
            ("g_color" variable (:type ("cv::Mat" type (:type "class") nil nil)) nil [1490 1514])
            ("g_forest" variable
               (:pointer 1
                :type ("CRForest" type (:type "class") nil nil))
                nil [1516 1535])
            ("onNewColorSample" function
               (:arguments 
                  ( ("node" variable (:type ("ColorNode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1961 1976])
                    ("data" variable (:type ("ColorNode::NewSampleReceivedData" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1977 2015]))                  
                :type "void")
                nil [1939 3008])
            ("onNewDepthSample" function
               (:arguments 
                  ( ("node" variable (:type ("DepthNode" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3147 3162])
                    ("data" variable (:type ("DepthNode::NewSampleReceivedData" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3163 3201]))                  
                :type "void")
                nil [3125 4716])
            ("configureDepthNode" function (:type "void") nil [5836 6993])
            ("configureColorNode" function (:type "void") nil [7076 8305])
            ("configureNode" function
               (:arguments 
                  ( ("node" variable (:type ("Node" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8407 8417]))                  
                :type "void")
                nil [8388 8986])
            ("onNodeConnected" function
               (:arguments 
                  ( ("device" variable (:type ("Device" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9090 9104])
                    ("data" variable (:type ("Device::NodeAddedData" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9105 9132]))                  
                :type "void")
                nil [9069 9164])
            ("onNodeDisconnected" function
               (:arguments 
                  ( ("device" variable (:type ("Device" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9271 9285])
                    ("data" variable (:type ("Device::NodeRemovedData" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9286 9315]))                  
                :type "void")
                nil [9247 9648])
            ("onDeviceConnected" function
               (:arguments 
                  ( ("context" variable (:type ("Context" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9754 9770])
                    ("data" variable (:type ("Context::DeviceAddedData" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9771 9801]))                  
                :type "void")
                nil [9731 10026])
            ("onDeviceDisconnected" function
               (:arguments 
                  ( ("context" variable (:type ("Context" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10135 10151])
                    ("data" variable (:type ("Context::DeviceRemovedData" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10152 10184]))                  
                :type "void")
                nil [10109 10249])
            ("main" function
               (:arguments 
                  ( ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [10341 10350])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [10351 10364]))                  
                :type "int")
                nil [10332 12373]))          
      :file "ConsoleDemo.cxx"
      :pointmax 12374
      :fsize 12373
      :lastmodtime '(21040 1427 515368 139000)
      :unmatched-syntax nil))
  :file "!home!masahiko!Programs!HFMD_demo_softkinetic!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
